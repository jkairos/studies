components:
  #-------------------------------
  # Reusable responses
  #-------------------------------
  responses:
    BadRequest:
      description: Failed to process request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            type: 'https://api.cox.com/problems/constraint-violation'
            title: Constraint Violation
            status: 400
            violations:
            - field: name
              message: field must not be null.

    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            type: 'https://api.cox.com/problems/resource-not-found'
            title: Not Found
            status: 404
            details: resource id 1234 was not found

    InternalServer:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          example:
            type: 'https://api.cox.com/problems/internal-server-error'
            title: Internal Server Error
            status: 500
            details: database connection error

  #-------------------------------
  # Reusable schemas (data models)
  #-------------------------------
  schemas:
    Problem:
      type: object
      title: Problem
      description: <b>Problem Detail</b> as a way to carry machine-readable details of errors in a HTTP response to avoid the need to define new error response formats for HTTP APIs <a href="https://tools.ietf.org/html/rfc7807">RFC 7807</a>
      properties:
        type:
          type: string
          format: uri
          description: |
            A URI reference that identifies the problem type.  When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).
          default: 'about:blank'
          example: 'https://api.cox.com/problems/constraint-violation'
        title:
          type: string
          description: |
            A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem. It should be written in english and by readable by engineers (usually not suited for non technical stakeholders and not localized).
          example: Service Unavailable
          nullable: true
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
          nullable: true
        detailedCode:
          type: integer
          format: int32
          description: |
            The code generated by the server which is used for detail message localizatioon.
          example: 1234
          nullable: true
        violations:
          type: array
          items:
            $ref: '#/components/schemas/Violation'
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the problem.
          example: Connection to database timed out
          nullable: true
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
          nullable: true

    Violation:
      description: Voilation fields and message details
      type: object
      title: Violation
      properties:
        field:
          type: string
          description: Name of the field where issue observed.
          example: loginId
          nullable: true
        message:
          type: string
          description: describe the issue observed on field
          example: field must not be null.
          nullable: true
        code:
          type: integer
          format: int32
          example: 1111