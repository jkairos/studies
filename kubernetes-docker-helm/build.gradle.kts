/*
 * This file was generated by the Gradle 'init' task.
 */

import com.google.common.collect.ImmutableMap
import org.springframework.boot.gradle.tasks.bundling.BootJar

plugins {
    id("com.palantir.docker") version "0.35.0"
    id("com.palantir.docker-run") version "0.35.0"
    id("java")
    id("org.springframework.boot") version "2.7.11"
    id("org.openapi.generator") version "6.6.0"
    id("org.springdoc.openapi-gradle-plugin") version "1.6.0"
    id ("io.spring.dependency-management") version "1.0.15.RELEASE"
}

sourceSets["main"].java.srcDir(file("$rootDir/build/generated"))

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = uri("https://repo.spring.io/milestone") }
    maven { url = uri("https://repo.spring.io/snapshot") }
}

configurations.all {
    resolutionStrategy{
        exclude(module="slf4j-simple")
    }
}

dependencies {
    implementation("io.rest-assured:rest-assured:3.3.0")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.openapitools:openapi-generator:7.0.1")
    implementation("org.openapitools:openapi-generator-gradle-plugin:6.6.0")
    implementation("org.openapitools:jackson-databind-nullable:0.2.6")
    implementation("javax.validation:validation-api:2.0.1.Final")
    implementation("io.swagger.core.v3:swagger-annotations:2.2.16")
    implementation("io.swagger.core.v3:swagger-models:2.2.16")
    implementation("org.projectlombok:lombok:1.18.30")
    implementation("io.springfox:springfox-boot-starter:3.0.0")
    implementation("org.springframework.boot:spring-boot-starter-test")
    annotationProcessor("org.projectlombok:lombok:1.18.30")
}

group = "com.cox.oss.pet"
version = "1.0.0-SNAPSHOT"
description = "demo-backend"
val mainClassName = "com.cox.oss.pet.KubernetesBackendApplication"

//gradle docker plugin configuration
apply(plugin = "com.palantir.docker")
apply(plugin = "java-library")
apply(plugin = "org.openapi.generator")

tasks.withType<BootJar> {
    manifest {
        attributes("Start-Class" to "$mainClassName")
    }
    archiveClassifier.set("")
}

springBoot {
    mainClass.set("$mainClassName")
}


docker {
    name = "backend-ktdemo:".plus(version)
    uri("backend-ktdemo:".plus(version))
    tag("name", "backend-ktdemo")
    buildArgs(ImmutableMap.of("name", "backend-ktdemo"))
    copySpec.from("build").into("build")
    pull(true)
    setDockerfile(file("Dockerfile"))
}

dockerRun {
    name = "backend-ktdemo"
    image = "backend-ktdemo:".plus(version)
    ports("8080:8080")
}

openApi {
    apiDocsUrl.set("http://localhost:5000/v3/api-docs")
    outputDir.set(file("$rootDir/build/docs"))
    outputFileName.set("swagger.yaml")
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$rootDir/src/main/resources/static/petstore-v3.0.yaml")
    outputDir.set("$rootDir/build/generated")
    apiPackage.set("org.openapi.example.api")
    invokerPackage.set("org.openapi.example.invoker")
    modelPackage.set("org.openapi.example.model")
}

tasks {
    val openApiGenerate by getting

    val compileJava by getting {
        dependsOn(openApiGenerate)
    }
}

tasks.dockerPrepare.configure {
    dependsOn(tasks.compileJava,
        tasks.bootJar,
        tasks.compileTestJava,
        tasks.dockerfileZip,
        tasks.processResources,
        tasks.processTestResources,
        tasks.test)
}

tasks.openApiGenerate.configure {
    dependsOn(tasks.processResources)
}

